- unless comment.id.nil?
  .container
    .row.d-flex.align-items-center.pb-3
      .col
        - if comment.user.profile_image?
          = link_to image_tag(comment.user.profile_image.thumb.url), user_path(comment.user.id)
        - else
          = link_to image_tag('no_profile_img.png'), user_path(comment.user.id)
        = link_to "#{comment.user.name}さん", user_path(comment.user.id), class: 'link pl-1'
      .col.d-flex.justify-content-end
        = comment.created_at.strftime('%Y/%m/%d')
    .card-body.border.rounded.mb-3
      = comment.comment
      / 返信コメントの表示
      - comment.replies.order(created_at: :desc).each do | reply |
        .container.w-95
          .row.d-flex.align-items-center.pb-3
            .col
              - if reply.user.profile_image?
                = link_to user_path(reply.user.id)
                  = image_tag(reply.user.profile_image.thumb.url)
              - else
                = link_to user_path(reply.user.id)
                  = image_tag('no_profile_img.png')
              = link_to user_path(reply.user.id), class: 'link pl-1'
                | #{reply.user.name}さん
            .col.d-flex.justify-content-end
              = reply.created_at.strftime('%Y/%m/%d')
          .card-body.border.rounded.mb-3
            = reply.comment
    = render 'comments/reply_form', comment: comment, comment_reply: comment_reply
    - if comment.user == current_user
      = link_to travel_record_comment_path(comment.travel_record_id, comment.id), method: :delete, remote: true do
        .text-right
          button.btn.btn-outline-secondary
            | 削除する
    hr