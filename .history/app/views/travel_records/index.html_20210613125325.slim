.box.travel-record-wrapper.p-4
  h4 はなたび記録の一覧
  .hr-blue
  - @travel_records.each do |travel_record|
    .row.p-4
      .col-4
        .row
          .col-2
            /= render 'travel_records/profile_image'
            - if travel_record.user.profile_image.blank?
              = link_to image_tag('no_profile_img.png'), user_path(travel_record.user.id)
            - else
              = link_to image_tag(travel_record.user.profile_image.thumb.url), user_path(travel_record.user.id)
          .col-8 #{travel_record.user.name}さん
      .offset-5.col-3 = l travel_record.visited_on, format: :long
      #star.star-size.offset-9.col-3
        .d-flex id=("star-rate-#{travel_record.id}")
      = render 'shared/star', travel_record: travel_record
    p 訪れた場所
    .card-body.border.rounded.mb-3 = travel_record.place
    h2 Gmap
    input id="address" type="textbox" value="GeekSalon"
    input type="button" value="Encode" onclick="codeAddress()"
    #display 何かが表示される、、、、！
    #map
    p タイトル
    .card-body.border.rounded.mb-3 = travel_record.title
    p クチコミ
    .card-body.border.rounded.mb-3 = travel_record.content
    .post-img.row
      - travel_record.images.each do | image |
        .col-4.mb-4
          = image_tag image.to_s

    javascript:
      let map
      let geocoder
      const display = document.getElementById('display')

      function initMap(){
        geocoder = new google.maps.Geocoder()

        map = new google.maps.Map(document.getElementById('map'), {
          center: {lat: 40.7828, lng:-73.9653},
          zoom: 12,
        });

        marker = new google.maps.Marker({
          position:  {lat: 40.7828, lng:-73.9653},
          map: map
        });
      }

      function codeAddress(){
        let inputAddress = document.getElementById('address').value;

        geocoder.geocode( { 'address': inputAddress}, function(results, status) {
          if (status == 'OK') {
            map.setCenter(results[0].geometry.location);
            var marker = new google.maps.Marker({
                map: map,
                position: results[0].geometry.location
            });
            display.textContent = "検索結果：" + results[ 0 ].geometry.location
          } else {
            alert('該当する結果がありませんでした：' + status);
          }
        });
      }

    script src="https://maps.googleapis.com/maps/api/js?key=#{ENV['GOOGLE_MAP_API']}&callback=initMap" async defer
    hr